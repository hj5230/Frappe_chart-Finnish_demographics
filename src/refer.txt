const postJson = {
    "query": [
        {
            "code": "Vuosi",
            "selection": {
                "filter": "item",
                "values": [
                    "2000",
                    "2001",
                    "2002",
                    "2003",
                    "2004",
                    "2005",
                    "2006",
                    "2007",
                    "2008",
                    "2009",
                    "2010",
                    "2011",
                    "2012",
                    "2013",
                    "2014",
                    "2015",
                    "2016",
                    "2017",
                    "2018",
                    "2019",
                    "2020",
                    "2021"
                ]
            }
        },
        {
            "code": "Alue",
            "selection": {
                "filter": "item",
                "values": [
                    "SSS"
                ]
            }
        },
        {
            "code": "Tiedot",
            "selection": {
                "filter": "item",
                "values": [
                    "vaesto"
                ]
            }
        }
    ],
    "response": {
        "format": "json-stat2"
    }
}

async function fetchData(post) {
    const url = "https://statfin.stat.fi/PxWeb/api/v1/en/StatFin/synt/statfin_synt_pxt_12dy.px";
    const promise = await fetch(url, {
        method: "POST",
        headers: {"content-type": "application/json"},
        body: JSON.stringify(post),
    });
    if(!promise.ok) {
        return alert('err when fetch');
    }
    processData(await promise.json());
}

function processData(data) {
    let anul = Object.values(data.dimension.Vuosi.category.label);
    let value = data.value;
    let mgri = [{'values': []}];
    for(let i = 0; i < value.length; ++i) {
        mgri[0]['values'].push(value[i]);
    }
    buildChart(anul, mgri);
}

function buildChart(year, mgri) {
    const chartData = {
        labels: year,
        datasets: mgri,
    }
    const chart = new frappe.Chart("#chart", {
        title: "population growth",
        data: chartData,
        height: 450,
        type: "line",
        colors: ['#eb5146'],

    });
}

let submit = document.getElementById('submit-data');
submit.onclick = () => {
    let city = document.getElementById('input-area').value;
    let code = getCode(city.toUpperCase());
    postJson.query[1].selection.values[0] = code;
    
    fetchData(postJson);
    return false;
}

const getCode = async(name) => {
    const code = "https://statfin.stat.fi/PxWeb/api/v1/en/StatFin/synt/statfin_synt_pxt_12dy.px";
    const resolve = await fetch(code);
    const file = await resolve.json();
    let names = file.variables[1].valueTexts;
    // names.indexof(name);
    console.log(name);
}

try {
    fetchData(postJson);
} catch(err) {
    alert(err);
}